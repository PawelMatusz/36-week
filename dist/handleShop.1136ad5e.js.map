{"version":3,"sources":["src/js/ShopComponent/ShopSelectors.js","src/js/ShopComponent/AddToBasket.js","src/js/ShopComponent/AddToLike.js","src/js/ShopComponent/DisplayList.js","src/js/ShopComponent/ShopPagination.js","src/js/ShopComponent/AddProducts.js","src/js/ShopComponent/GetMinPrice.js","src/js/ShopComponent/GetMaxPrice.js","src/js/ShopComponent/FilterProducts.js","node_modules/regenerator-runtime/runtime.js","src/js/ShopComponent/GetProducts.js","src/js/ShopComponent/HandleSelectChange.js","src/js/ShopComponent/FilterByCategories.js","src/js/ShopComponent/AddSupToButton.js","src/js/handleShop.js"],"names":["ShopSelectors","sort","price","categoriesButtons","productsIndex","productsPagination","productCard","productPhoto","productDescription","productPrice","productLike","productAdd","shopBasket","basketCard","basket","document","querySelector","basketCardContainer","innerHTML","addToBasket","e","target","classList","contains","product","closest","cloneNode","basketPhoto","basketDescription","basketPrice","src","textContent","appendChild","addToLike","toggle","displayList","items","wrapper","rows_per_page","page","start","end","paginatedItems","slice","i","length","item","newCard","image","description","addEventListener","current_page","rows","SetupPagination","page_count","Math","ceil","btn","PaginationButton","button","createElement","innerText","add","remove","addProducts","products","pagination_element","getMinPrice","minInputValue","parseFloat","value","getMaxPrice","maxInputValue","maxValue","max","map","filterProducts","prod","filter","productsURL","getProducts","fetch","response","json","data","console","log","handleSelectChange","key","sortedProducts","a","b","filterByCategories","categories","includes","dataset","addSupToButton","buttons","forEach","sup","color","sortSelect","filterPrice","querySelectorAll","then"],"mappings":"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","file":"handleShop.1136ad5e.js","sourceRoot":"..","sourcesContent":["export const ShopSelectors = {\n  sort: '[data-sort]',\n  price: '[data-price]',\n  categoriesButtons: '[data-categories]',\n  productsIndex: '[data-products-index]',\n  productsPagination: '[data-pagination]',\n  productCard: '[data-product-card]',\n  productPhoto: '[data-product-photo]',\n  productDescription: '[data-product-description]',\n  productPrice: '[data-product-price]',\n  productLike: '[data-product-like]',\n  productAdd: '[data-product-add]',\n  shopBasket: '[data-basket]',\n  basketCard: '[data-basket-card]',\n};\n","import { ShopSelectors } from './ShopSelectors.js';\n\nconst basket = document.querySelector(ShopSelectors.shopBasket);\nconst basketCardContainer = document.querySelector(ShopSelectors.basketCard);\n\nbasket.innerHTML = '';\n\nexport const addToBasket = e => {\n  if (e.target.classList.contains('fa-shopping-basket')) {\n    const product = e.target.closest(ShopSelectors.productCard);\n\n    let basketCard = basketCardContainer.cloneNode(true);\n    const basketPhoto = basketCard.querySelector('.shop__basket-photo'),\n      basketDescription = basketCard.querySelector('.shop__basket-description'),\n      basketPrice = basketCard.querySelector('.shop__basket-price');\n\n    basketPhoto.src = product.querySelector('.product__card-photo').src;\n    basketDescription.textContent = product.querySelector(\n      '.product__card-description'\n    ).textContent;\n    basketPrice.textContent = product.querySelector(\n      '.product__card-price'\n    ).textContent;\n    basket.appendChild(basketCard);\n  } else return;\n};\n","export const addToLike = e => {\n  if (e.target.classList.contains('product__card-like')) {\n    e.target.classList.toggle('product__card-like-is-active');\n  }\n};\n","import { addToBasket } from './AddToBasket.js';\nimport { addToLike } from './AddToLike.js';\nimport { ShopSelectors } from './ShopSelectors.js';\n\nconst productCard = document.querySelector(ShopSelectors.productCard),\n  productsIndex = document.querySelector(ShopSelectors.productsIndex);\n\nexport const displayList = (items, wrapper, rows_per_page, page) => {\n  wrapper.innerHTML = '';\n  page--;\n\n  let start = rows_per_page * page;\n  let end = start + rows_per_page;\n  let paginatedItems = items.slice(start, end);\n\n  for (let i = 0; i < paginatedItems.length; i++) {\n    let item = paginatedItems[i];\n\n    let newCard = productCard.cloneNode(true);\n    const productPhoto = newCard.querySelector(ShopSelectors.productPhoto),\n      productDescription = newCard.querySelector(\n        ShopSelectors.productDescription\n      ),\n      productPrice = newCard.querySelector(ShopSelectors.productPrice);\n\n    productPhoto.src = item.image;\n    productDescription.innerHTML = item.description;\n    productPrice.innerHTML = item.price;\n    productsIndex.appendChild(newCard);\n    newCard.addEventListener('click', e => addToBasket(e));\n    newCard.addEventListener('click', e => addToLike(e));\n  }\n};","import { displayList } from './DisplayList.js';\nimport { ShopSelectors } from './ShopSelectors.js';\n\nlet current_page = 1;\nlet rows = 6;\nconst productsIndex = document.querySelector(ShopSelectors.productsIndex);\n\nexport const SetupPagination = (items, wrapper, rows_per_page) => {\n  wrapper.innerHTML = '';\n\n  let page_count = Math.ceil(items.length / rows_per_page);\n  for (let i = 1; i < page_count + 1; i++) {\n    let btn = PaginationButton(i, items);\n    wrapper.appendChild(btn);\n  }\n};\n\nconst PaginationButton = (page, items) => {\n  let button = document.createElement('button');\n  button.innerText = page;\n  button.classList.add('products__pagination-button');\n\n  if (current_page === page) button.classList.add('active');\n\n  button.addEventListener('click', function() {\n    current_page = page;\n    displayList(items, productsIndex, rows, current_page);\n\n    let current_btn = document.querySelector('button.active');\n    current_btn.classList.remove('active');\n\n    button.classList.add('active');\n  });\n\n  return button;\n};\n","// https://github.com/TylerPottsDev/vanillajs-pagination\nimport { SetupPagination } from './ShopPagination.js';\nimport { displayList } from './DisplayList.js';\nimport { ShopSelectors } from './ShopSelectors.js';\n\nexport const addProducts = products => {\n  const productsIndex = document.querySelector(ShopSelectors.productsIndex),\n    pagination_element = document.querySelector(\n      ShopSelectors.productsPagination\n    );\n\n  let rows = 6,\n    current_page = 1;\n  displayList(products, productsIndex, rows, current_page);\n  SetupPagination(products, pagination_element, rows);\n};\n","export function getMinPrice() {\n  let minInputValue = parseFloat(\n    document.querySelector('.filter__price-value--min').value\n  );\n  return minInputValue || 0;\n}\n","export function getMaxPrice(products) {\n  let maxInputValue = parseFloat(\n    document.querySelector('.filter__price-value--max').value\n  );\n  let maxValue = Math.max(...products.map(product => product.value));\n  return maxInputValue || maxValue;\n}\n","import { addProducts } from './AddProducts.js';\nimport { getMinPrice } from './GetMinPrice.js';\nimport { getMaxPrice } from './GetMaxPrice.js';\n\nexport const filterProducts = products => {\n  let prod = products.filter(product => {\n    return (\n      product.value >= getMinPrice() && product.value <= getMaxPrice(products)\n    );\n  });\n\n  addProducts(prod);\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import regeneratorRuntime from 'regenerator-runtime';\n\nconst productsURL =\n  'https://raw.githubusercontent.com/PawelMatusz/36-week-challenge-shop/master/dist/json/products.json';\n\nexport const getProducts = async () => {\n  try {\n    const response = await fetch(productsURL);\n    const data = await response.json();\n    const { products } = await data;\n    return products;\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import { addProducts } from './AddProducts.js';\nimport { ShopSelectors } from './ShopSelectors.js';\n\nexport const handleSelectChange = products => {\n  const key = document.querySelector(ShopSelectors.sort).value;\n  const sortedProducts = products.sort((a, b) => {\n    if (b[key] < a[key]) {\n      return 1;\n    } else if (b[key] > a[key]) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n  addProducts(sortedProducts);\n};\n","import { addProducts } from './AddProducts.js';\n\nexport const filterByCategories = (products, button) => {\n  let prod = products.filter(product =>\n    product.categories.includes(button.dataset.categories)\n  );\n  addProducts(prod);\n  if (button.dataset.categories === 'all') {\n    addProducts(products);\n  }\n};\n","export const addSupToButton = (items, buttons) => {\n  buttons.forEach(button => {\n    const sup = document.createElement('sup');\n    sup.classList.add('filter__sup');\n    let prod = items.filter(product =>\n      product.categories.includes(button.dataset.categories)\n    );\n    if (\n      button.dataset.categories !== 'all' &&\n      !button.dataset.color &&\n      prod.length !== 0\n    ) {\n      sup.textContent = prod.length;\n      button.appendChild(sup);\n    } else if (\n      button.dataset.categories === 'all' &&\n      !button.dataset.color &&\n      items.length !== 0\n    ) {\n      sup.textContent = items.length;\n      button.appendChild(sup);\n    }\n  });\n};\n","import { addProducts } from './ShopComponent/AddProducts.js';\nimport { filterProducts } from './ShopComponent/FilterProducts.js';\nimport { getProducts } from './ShopComponent/GetProducts.js';\nimport { handleSelectChange } from './ShopComponent/HandleSelectChange.js';\nimport { filterByCategories } from './ShopComponent/FilterByCategories.js';\nimport { addSupToButton } from './ShopComponent/AddSupToButton.js';\nimport { ShopSelectors } from './ShopComponent/ShopSelectors.js';\n\nconst sortSelect = document.querySelector(ShopSelectors.sort),\n  filterPrice = document.querySelector(ShopSelectors.price),\n  buttons = document.querySelectorAll(ShopSelectors.categoriesButtons);\n\nlet items = [];\n\ngetProducts().then(products => {\n  items = products;\n  addProducts(products);\n  addSupToButton(items, buttons);\n});\n\nfilterPrice.addEventListener('click', () => filterProducts(items));\n\nsortSelect.addEventListener('change', () => handleSelectChange(items));\n\nbuttons.forEach(button => {\n  button.addEventListener('click', () => filterByCategories(items, button));\n});\n"]}